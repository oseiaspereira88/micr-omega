name: Deploy

on:
  push:
    branches:
      - main

jobs:
  deploy-worker:
    name: Deploy Worker
    runs-on: ubuntu-latest
    environment:
      name: worker-production
      url: ${{ steps.publish-worker.outputs.deployment-url }}
    permissions:
      contents: read
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Install dependencies
        run: npm ci

      - name: Publish Worker
        id: publish-worker
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          workingDirectory: worker
          command: publish

  deploy-pages:
    name: Deploy Pages
    needs: deploy-worker
    runs-on: ubuntu-latest
    environment:
      name: pages-production
      url: ${{ steps.publish-pages.outputs.deployment-url }}
    permissions:
      contents: read
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Install dependencies
        run: npm ci

      - name: Build web app
        run: npm run build:web

      - name: Deploy Pages
        id: publish-pages
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          command: ${{ secrets.CLOUDFLARE_PAGES_PROJECT && format('pages deploy ./web/dist --project-name {0}', secrets.CLOUDFLARE_PAGES_PROJECT) || 'pages deploy ./web/dist' }}
