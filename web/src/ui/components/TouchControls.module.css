.touchLayer {
  position: absolute;
  inset: 0;
  pointer-events: none;
  z-index: var(--z-touch-controls);
  --touch-scale: 1;
  --touch-vertical-scale: 1;
  --touch-spacing: calc(var(--touch-scale) * 15px);
  --touch-gap: calc(var(--touch-scale) * var(--touch-vertical-scale) * 80px);
  --touch-horizontal-offset: calc(var(--touch-scale) * 95px);
  --touch-joystick-size: calc(var(--touch-scale) * 110px);
  --touch-joystick-knob: calc(var(--touch-scale) * 45px);
  --touch-legend-space: 0px;
  --touch-primary: #38bdf8;
  --touch-secondary: #2dd4bf;
  --touch-tertiary: #0ea5e9;
  --touch-surface: rgba(10, 22, 40, 0.82);
  --touch-surface-alt: rgba(12, 32, 54, 0.72);
  --touch-surface-deep: rgba(12, 32, 54, 0.95);
  --touch-border: rgba(125, 211, 252, 0.55);
  --touch-border-strong: rgba(56, 189, 248, 0.75);
  --touch-primary-border-strong: rgba(125, 211, 252, 0.85);
  --touch-secondary-border: rgba(34, 197, 210, 0.65);
  --touch-primary-soft: rgba(56, 189, 248, 0.32);
  --touch-primary-glow: rgba(56, 189, 248, 0.45);
  --touch-primary-highlight: rgba(56, 189, 248, 0.6);
  --touch-primary-bright: rgba(165, 243, 252, 0.6);
  --touch-secondary-soft: rgba(45, 212, 191, 0.35);
  --touch-secondary-glow: rgba(45, 212, 191, 0.55);
  --touch-secondary-strong: rgba(34, 197, 210, 0.7);
  --touch-secondary-intense: rgba(34, 211, 238, 0.8);
  --touch-tertiary-strong: rgba(14, 165, 233, 0.75);
  --touch-tertiary-soft: rgba(14, 165, 233, 0.65);
  --touch-tertiary-deep: rgba(3, 105, 161, 0.95);
  --touch-surface-shadow: rgba(4, 10, 24, 0.92);
  --touch-primary-muted: rgba(59, 130, 246, 0.18);
  --touch-neutral-soft: rgba(148, 163, 184, 0.35);
  --touch-neutral-glow: rgba(148, 163, 184, 0.45);
  --touch-neutral-border: rgba(148, 163, 184, 0.45);
  --touch-shadow: 0 14px 32px rgba(4, 10, 24, 0.58);
  --touch-shadow-soft: 0 6px 18px rgba(4, 10, 24, 0.42);
  --touch-disabled-filter: saturate(0.4) brightness(0.85);
  --touch-cooldown-filter: saturate(0.65) brightness(0.9);
  --touch-bottom-base: calc(
    var(--safe-area-inset-bottom, 0px) + var(--touch-spacing) + var(--touch-legend-space)
  );
  --touch-attack-bottom: clamp(
    var(--touch-bottom-base),
    calc(var(--touch-bottom-base) + var(--touch-gap) * 0.2),
    calc(var(--touch-bottom-base) + var(--touch-gap) * 0.8)
  );
  --touch-dash-bottom: clamp(
    calc(var(--touch-bottom-base) + var(--touch-gap) * 0.7),
    calc(var(--touch-bottom-base) + var(--touch-gap) * 1.05),
    calc(var(--touch-bottom-base) + var(--touch-gap) * 1.6)
  );
  --touch-skill-bottom: clamp(
    calc(var(--touch-bottom-base) + var(--touch-gap) * 0.7),
    calc(var(--touch-bottom-base) + var(--touch-gap) * 1.05),
    calc(var(--touch-bottom-base) + var(--touch-gap) * 1.6)
  );
  --touch-cycle-bottom: clamp(
    calc(var(--touch-bottom-base) + var(--touch-gap) * 1.6),
    calc(var(--touch-bottom-base) + var(--touch-gap) * 2.1),
    calc(var(--touch-bottom-base) + var(--touch-gap) * 2.8)
  );
  --touch-evolve-bottom: clamp(
    var(--touch-bottom-base),
    calc(var(--touch-bottom-base) + var(--touch-gap) * 0.35),
    calc(var(--touch-bottom-base) + var(--touch-gap) * 1.1)
  );
}

.sidebarHidden {
  opacity: 0;
  pointer-events: none !important;
  touch-action: none !important;
}

.sidebarHidden *,
.sidebarHidden *::before,
.sidebarHidden *::after {
  pointer-events: none !important;
  touch-action: none !important;
}

.layoutRight {
  direction: ltr;
}

.showLegends {
  /* Utility class to allow legend-specific overrides when active */
}

.layoutLeft {
  direction: ltr;
}

.landscape .joystickZone {
  top: calc(var(--safe-area-inset-top, 0px) + var(--touch-spacing));
  bottom: auto;
}

.landscape {
  --touch-attack-bottom: clamp(
    var(--touch-bottom-base),
    calc(var(--touch-bottom-base) + var(--touch-gap) * 0.15),
    calc(var(--touch-bottom-base) + var(--touch-gap) * 0.5)
  );
  --touch-dash-bottom: clamp(
    calc(var(--touch-bottom-base) + var(--touch-gap) * 0.5),
    calc(var(--touch-bottom-base) + var(--touch-gap) * 0.9),
    calc(var(--touch-bottom-base) + var(--touch-gap) * 1.3)
  );
  --touch-skill-bottom: clamp(
    calc(var(--touch-bottom-base) + var(--touch-gap) * 0.5),
    calc(var(--touch-bottom-base) + var(--touch-gap) * 0.9),
    calc(var(--touch-bottom-base) + var(--touch-gap) * 1.3)
  );
  --touch-cycle-bottom: clamp(
    calc(var(--touch-bottom-base) + var(--touch-gap) * 1.1),
    calc(var(--touch-bottom-base) + var(--touch-gap) * 1.7),
    calc(var(--touch-bottom-base) + var(--touch-gap) * 2.2)
  );
  --touch-evolve-bottom: clamp(
    var(--touch-bottom-base),
    calc(var(--touch-bottom-base) + var(--touch-gap) * 0.25),
    calc(var(--touch-bottom-base) + var(--touch-gap) * 0.8)
  );
}

.compact {
  --touch-spacing: calc(var(--touch-scale) * 10px);
  --touch-gap: calc(var(--touch-scale) * var(--touch-vertical-scale) * 58px);
  --touch-horizontal-offset: calc(var(--touch-scale) * 68px);
  --touch-joystick-size: calc(var(--touch-scale) * 92px);
  --touch-joystick-knob: calc(var(--touch-scale) * 36px);
  --touch-bottom-base: calc(
    var(--safe-area-inset-bottom, 0px) + var(--touch-spacing) + var(--touch-legend-space)
  );
}

.compact .buttonLabel {
  font-size: clamp(0.6rem, 1.8vw, 0.75rem);
}

.compact .buttonLegend {
  font-size: clamp(0.55rem, 1.5vw, 0.7rem);
}

.layoutRight .joystickZone {
  left: calc(var(--safe-area-inset-left, 0px) + var(--touch-spacing));
  right: auto;
}

.layoutLeft .joystickZone {
  right: calc(var(--safe-area-inset-right, 0px) + var(--touch-spacing));
  left: auto;
}

.layoutRight .attackButton,
.layoutRight .dashButton {
  right: calc(var(--safe-area-inset-right, 0px) + var(--touch-spacing));
  left: auto;
}

.layoutLeft .attackButton,
.layoutLeft .dashButton {
  left: calc(var(--safe-area-inset-left, 0px) + var(--touch-spacing));
  right: auto;
}

.layoutRight .skillButton,
.layoutRight .cycleSkillButton,
.layoutRight .evolveButton {
  right: calc(
    var(--safe-area-inset-right, 0px) + var(--touch-spacing) + var(--touch-horizontal-offset)
  );
  left: auto;
}

.layoutLeft .skillButton,
.layoutLeft .cycleSkillButton,
.layoutLeft .evolveButton {
  left: calc(
    var(--safe-area-inset-left, 0px) + var(--touch-spacing) + var(--touch-horizontal-offset)
  );
  right: auto;
}

.joystickZone {
  position: absolute;
  bottom: calc(var(--safe-area-inset-bottom, 0px) + var(--touch-spacing));
  left: calc(var(--safe-area-inset-left, 0px) + var(--touch-spacing));
  width: var(--touch-joystick-size);
  height: var(--touch-joystick-size);
  border-radius: 50%;
  background: radial-gradient(
      circle at 32% 30%,
      var(--touch-primary-soft),
      rgba(8, 18, 36, 0.8) 70%,
      var(--touch-surface-shadow) 100%
    ),
    var(--touch-surface);
  border: 1px solid var(--touch-border);
  display: flex;
  justify-content: center;
  align-items: center;
  touch-action: none;
  backdrop-filter: blur(5px);
  pointer-events: auto;
  box-shadow: var(--touch-shadow);
  position: relative;
}

.joystickZone::before {
  content: '';
  position: absolute;
  inset: -4px;
  border-radius: inherit;
  background: radial-gradient(circle, var(--touch-primary-soft), transparent 70%);
  opacity: 0.65;
  filter: blur(4px);
  z-index: 0;
}

.joystickKnob {
  width: var(--touch-joystick-knob);
  height: var(--touch-joystick-knob);
  border-radius: 50%;
  background: radial-gradient(
    circle at 35% 28%,
    var(--touch-primary-highlight),
    var(--touch-tertiary-soft) 55%,
    var(--touch-surface-deep)
  );
  border: 1px solid var(--touch-border-strong);
  box-shadow: inset 0 0 12px rgba(4, 10, 24, 0.68), 0 6px 16px rgba(4, 10, 24, 0.55);
  transition: transform 0.2s;
  position: relative;
  z-index: 1;
}

.button {
  position: absolute;
  border-radius: 50%;
  border: 1px solid var(--touch-border);
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
  touch-action: none;
  pointer-events: auto;
  color: #fff;
  overflow: visible;
  background: radial-gradient(
      circle at 30% 30%,
    var(--touch-primary-soft),
    rgba(8, 18, 36, 0.85) 70%,
    var(--touch-surface-shadow) 100%
    ),
    var(--touch-surface-alt);
  box-shadow: var(--touch-shadow), 0 0 16px var(--touch-primary-soft);
  position: relative;
  transition: box-shadow 180ms ease, transform 180ms ease, filter 180ms ease,
    border-color 180ms ease;
}

.buttonActive {
  transform: scale(0.94);
  box-shadow: 0 10px 26px rgba(4, 10, 24, 0.62), 0 0 24px var(--touch-primary-glow);
  filter: brightness(1.05);
}

/* Ripple effect overlay */
.button::after {
  content: '';
  position: absolute;
  inset: 0;
  border-radius: inherit;
  background: radial-gradient(
    circle at var(--ripple-x, 50%) var(--ripple-y, 50%),
    rgba(255, 255, 255, 0.4) 0%,
    rgba(255, 255, 255, 0.2) 20%,
    transparent 70%
  );
  opacity: 0;
  transform: scale(0);
  pointer-events: none;
  z-index: 10;
  transition: opacity 0ms, transform 0ms;
}

.button.rippleActive::after {
  animation: rippleEffect 400ms cubic-bezier(0.4, 0, 0.2, 1) forwards;
}

@keyframes rippleEffect {
  0% {
    opacity: 1;
    transform: scale(0);
  }
  50% {
    opacity: 0.6;
  }
  100% {
    opacity: 0;
    transform: scale(2.5);
  }
}

.attackButtonActive {
  border-color: var(--touch-primary-border-strong);
  box-shadow: 0 12px 30px rgba(56, 189, 248, 0.55), 0 0 32px var(--touch-primary-highlight);
}

.dashButtonActive {
  border-color: var(--touch-secondary-intense);
  box-shadow: 0 10px 24px rgba(45, 212, 191, 0.5), 0 0 26px var(--touch-secondary-glow);
}

.skillButtonActive {
  border-color: var(--touch-primary-border-strong);
  box-shadow: 0 12px 28px rgba(56, 189, 248, 0.5), 0 0 28px var(--touch-primary);
  filter: brightness(1.08);
}

.cycleSkillButtonActive {
  border-color: var(--touch-secondary-border);
  box-shadow: 0 9px 22px rgba(45, 212, 191, 0.45), 0 0 22px var(--touch-secondary-soft);
}

.evolveButtonActive {
  border-color: rgba(244, 114, 182, 0.8);
  box-shadow: 0 10px 26px rgba(244, 114, 182, 0.4), 0 0 24px rgba(244, 114, 182, 0.5);
  filter: brightness(1.06);
}

.button::before {
  content: '';
  position: absolute;
  inset: -5px;
  border-radius: inherit;
  background: radial-gradient(circle, var(--touch-secondary-soft), transparent 70%);
  opacity: 0;
  pointer-events: none;
  transition: opacity 180ms ease;
  filter: blur(6px);
  z-index: 0;
}

.button:focus-visible:not(:disabled):not(.disabled)::before,
.button:hover::before {
  opacity: 0.85;
}

.actionGroup {
  position: absolute;
  inset: 0;
  pointer-events: none;
}

.actionGroup > * {
  pointer-events: auto;
}

.button:focus-visible:not(:disabled):not(.disabled),
.attackButton:focus-visible:not(:disabled):not(.disabled),
.dashButton:focus-visible:not(:disabled):not(.disabled),
.skillButton:focus-visible:not(:disabled):not(.disabled),
.cycleSkillButton:focus-visible:not(:disabled):not(.disabled),
.evolveButton:focus-visible:not(:disabled):not(.disabled) {
  outline: 3px solid #00ffe1;
  outline-offset: 4px;
}

.attackButton {
  bottom: var(--touch-attack-bottom);
  right: calc(var(--safe-area-inset-right, 0px) + var(--touch-spacing));
  width: calc(var(--touch-scale) * 70px);
  height: calc(var(--touch-scale) * 70px);
  font-size: calc(var(--touch-scale) * 1.8rem);
  background: radial-gradient(
      circle at 32% 28%,
      var(--touch-primary-glow),
      var(--touch-tertiary-strong) 55%,
      var(--touch-tertiary-deep)
    ),
    linear-gradient(160deg, rgba(8, 18, 36, 0.9), var(--touch-surface-alt));
  border-color: var(--touch-border-strong);
  box-shadow: 0 12px 28px rgba(4, 10, 24, 0.6), 0 0 28px var(--touch-primary-glow);
}

.dashButton {
  bottom: var(--touch-dash-bottom);
  right: calc(var(--safe-area-inset-right, 0px) + var(--touch-spacing));
  width: calc(var(--touch-scale) * 60px);
  height: calc(var(--touch-scale) * 60px);
  font-size: calc(var(--touch-scale) * 1.5rem);
  background: radial-gradient(
      circle at 30% 30%,
      var(--touch-secondary-glow),
      var(--touch-secondary-strong) 60%,
      var(--touch-surface-shadow)
    ),
    linear-gradient(160deg, rgba(8, 18, 36, 0.9), var(--touch-surface-alt));
  border-color: var(--touch-secondary-strong);
}

.skillButton {
  bottom: var(--touch-skill-bottom);
  right: calc(
    var(--safe-area-inset-right, 0px) + var(--touch-spacing) + var(--touch-horizontal-offset)
  );
  width: calc(var(--touch-scale) * 65px);
  height: calc(var(--touch-scale) * 65px);
  font-size: calc(var(--touch-scale) * 1.6rem);
  color: rgba(8, 18, 36, 0.9);
  background: radial-gradient(
      circle at 28% 28%,
      var(--touch-primary-highlight),
      var(--touch-primary) 55%,
      var(--touch-surface-deep)
    ),
    linear-gradient(160deg, rgba(8, 18, 36, 0.9), var(--touch-surface-alt));
  border-color: var(--touch-primary-border-strong);
  box-shadow: 0 14px 30px rgba(4, 10, 24, 0.62), 0 0 30px var(--touch-primary-glow);
}

.cycleSkillButton {
  bottom: var(--touch-cycle-bottom);
  right: calc(
    var(--safe-area-inset-right, 0px) + var(--touch-spacing) + var(--touch-horizontal-offset)
  );
  width: calc(var(--touch-scale) * 55px);
  height: calc(var(--touch-scale) * 55px);
  font-size: calc(var(--touch-scale) * 1.4rem);
  background: radial-gradient(
      circle at 28% 28%,
      var(--touch-primary-soft),
      var(--touch-secondary-strong) 58%,
      var(--touch-surface-shadow)
    ),
    linear-gradient(160deg, rgba(8, 18, 36, 0.9), var(--touch-surface-alt));
  border-color: var(--touch-secondary-border);
}

.buttonIcon {
  position: relative;
  z-index: 2;
  pointer-events: none;
}

.buttonLabel {
  position: absolute;
  left: 50%;
  top: calc(50% + var(--touch-scale) * 12px);
  transform: translate(-50%, -50%);
  font-size: calc(var(--touch-scale) * 0.55rem);
  font-weight: 700;
  letter-spacing: 0.01em;
  color: #fff;
  pointer-events: none;
  text-shadow: 0 0 4px rgba(0, 0, 0, 0.75);
  white-space: nowrap;
  z-index: 2;
}

.landscape .buttonLabel {
  top: calc(50% + var(--touch-scale) * 10px);
  font-size: calc(var(--touch-scale) * 0.5rem);
  letter-spacing: 0.04em;
}

.buttonLabelBottom {
  top: calc(50% + var(--touch-scale) * 14px);
}

.landscape .buttonLabelBottom {
  top: calc(50% + var(--touch-scale) * 12px);
}

.buttonLabelTop {
  top: calc(50% - var(--touch-scale) * 16px);
}

.landscape .buttonLabelTop {
  top: calc(50% - var(--touch-scale) * 14px);
}

.buttonLabelHighlight {
  color: #fff;
  text-shadow: 0 0 5px rgba(0, 0, 0, 0.85);
}

.buttonLabelMuted {
  color: rgba(255, 255, 255, 0.75);
  text-shadow: 0 0 3px rgba(0, 0, 0, 0.65);
}

.buttonLegend {
  position: absolute;
  top: 100%;
  margin-top: calc(var(--touch-scale) * 8px);
  padding: calc(var(--touch-scale) * 3px) calc(var(--touch-scale) * 8px);
  border-radius: 999px;
  font-size: calc(var(--touch-scale) * 0.65rem);
  font-weight: 600;
  line-height: 1.15;
  color: #fff;
  background: rgba(0, 0, 0, 0.72);
  white-space: nowrap;
  text-shadow: 0 0 6px rgba(0, 0, 0, 0.85);
  pointer-events: none;
  z-index: 3;
}

.layoutRight .buttonLegend {
  right: 0;
  transform: translateX(-10%);
  text-align: right;
}

.layoutLeft .buttonLegend {
  left: 0;
  transform: translateX(10%);
  text-align: left;
}

.landscape .buttonLegend {
  font-size: calc(var(--touch-scale) * 0.55rem);
  margin-top: calc(var(--touch-scale) * 5px);
  padding: calc(var(--touch-scale) * 2px) calc(var(--touch-scale) * 6px);
  letter-spacing: 0.04em;
}

.cooldownOverlay {
  position: absolute;
  inset: 0;
  border-radius: 50%;
  background: conic-gradient(
    rgba(56, 189, 248, 0.45) var(--cooldown-progress, 0%),
    rgba(4, 10, 24, 0.45) 0
  );
  transform: rotate(-90deg);
  pointer-events: none;
  z-index: 1;
  transition: opacity 200ms ease;
}

/* Skill ready flash animation */
.skillReady.skillJustReady {
  animation: skillReadyFlash 600ms ease-out;
}

@keyframes skillReadyFlash {
  0% {
    box-shadow: 0 14px 32px rgba(4, 10, 24, 0.62), 0 0 30px var(--touch-primary-glow);
  }
  50% {
    box-shadow: 0 14px 42px rgba(56, 189, 248, 0.8), 0 0 60px rgba(56, 189, 248, 0.9);
    transform: scale(1.08);
    filter: brightness(1.3);
  }
  100% {
    box-shadow: 0 14px 32px rgba(4, 10, 24, 0.62), 0 0 30px var(--touch-primary-glow);
  }
}

/* Dash ready flash animation */
.chargeReady.chargeJustReady {
  animation: chargeReadyFlash 600ms ease-out;
}

@keyframes chargeReadyFlash {
  0% {
    box-shadow: 0 12px 26px rgba(4, 10, 24, 0.6), 0 0 24px var(--touch-secondary-glow);
  }
  50% {
    box-shadow: 0 12px 36px rgba(45, 212, 191, 0.8), 0 0 50px rgba(45, 212, 191, 0.9);
    transform: scale(1.06);
    filter: brightness(1.25);
  }
  100% {
    box-shadow: 0 12px 26px rgba(4, 10, 24, 0.6), 0 0 24px var(--touch-secondary-glow);
  }
}

.skillCooldownOverlay {
  background: conic-gradient(
    rgba(45, 212, 191, 0.55) var(--cooldown-progress, 0%),
    rgba(4, 10, 24, 0.55) 0
  );
}

.cooldownLabel {
  position: absolute;
  top: calc(var(--touch-scale) * 6px);
  left: 50%;
  transform: translateX(-50%);
  font-size: calc(var(--touch-scale) * 0.65rem);
  font-weight: 600;
  pointer-events: none;
  text-shadow: 0 0 3px rgba(0, 0, 0, 0.75);
  z-index: 2;
}

.dashLabel {
  color: #fff;
}

.skillLabel {
  position: absolute;
  left: 50%;
  transform: translateX(-50%);
  font-size: calc(var(--touch-scale) * 0.6rem);
  font-weight: 600;
  pointer-events: none;
  z-index: 2;
  text-shadow: 0 0 2px rgba(0, 0, 0, 0.55);
}

.skillCostLabel {
  bottom: calc(var(--touch-scale) * 6px);
}

.skillLabelReady {
  color: #001;
}

.skillLabelDisabled {
  color: rgba(255, 255, 255, 0.85);
}

.skillLabelHidden {
  opacity: 0;
}

.skillCooldownLabel {
  color: #fff;
}

.evolveButton {
  bottom: var(--touch-evolve-bottom);
  right: calc(
    var(--safe-area-inset-right, 0px) + var(--touch-spacing) + var(--touch-horizontal-offset)
  );
  width: calc(var(--touch-scale) * 60px);
  height: calc(var(--touch-scale) * 60px);
  font-size: calc(var(--touch-scale) * 1.5rem);
}

.disabled {
  cursor: not-allowed;
  filter: var(--touch-disabled-filter);
  box-shadow: inset 0 0 0 1px rgba(148, 163, 184, 0.28), 0 6px 16px rgba(4, 10, 24, 0.4);
}

.visuallyHidden {
  position: absolute;
  width: 1px;
  height: 1px;
  margin: -1px;
  padding: 0;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border: 0;
}

.chargeReady {
  background: radial-gradient(
      circle at 35% 28%,
      var(--touch-primary-bright),
      var(--touch-secondary-intense) 60%,
      var(--touch-surface-deep)
    ),
    linear-gradient(170deg, rgba(8, 18, 36, 0.95), rgba(12, 32, 54, 0.76));
  box-shadow: 0 12px 26px rgba(4, 10, 24, 0.6), 0 0 24px var(--touch-secondary-glow);
}

.chargeEmpty {
  background: radial-gradient(
      circle at 35% 28%,
      var(--touch-primary-muted),
      var(--touch-surface-deep)
    ),
    linear-gradient(170deg, rgba(8, 18, 36, 0.92), rgba(12, 32, 54, 0.7));
  border-color: var(--touch-neutral-border);
  box-shadow: var(--touch-shadow-soft);
}

.skillReady {
  background: radial-gradient(
      circle at 35% 28%,
      var(--touch-primary-highlight),
      var(--touch-primary) 60%,
      var(--touch-surface-deep)
    ),
    linear-gradient(170deg, rgba(8, 18, 36, 0.95), rgba(12, 32, 54, 0.75));
  box-shadow: 0 14px 32px rgba(4, 10, 24, 0.62), 0 0 30px var(--touch-primary-glow);
}

.skillDisabled {
  background: radial-gradient(
      circle at 40% 32%,
      var(--touch-neutral-soft),
      rgba(15, 23, 42, 0.85)
    ),
    linear-gradient(170deg, rgba(8, 18, 36, 0.9), rgba(12, 32, 54, 0.75));
  color: rgba(226, 232, 240, 0.78);
  border-color: var(--touch-neutral-border);
  box-shadow: var(--touch-shadow-soft);
}

.cycleSkillReady {
  background: radial-gradient(
      circle at 32% 30%,
      var(--touch-primary-glow),
      var(--touch-secondary-strong) 60%,
      var(--touch-surface-shadow)
    ),
    linear-gradient(170deg, rgba(8, 18, 36, 0.95), rgba(12, 32, 54, 0.76));
  box-shadow: 0 12px 26px rgba(4, 10, 24, 0.58), 0 0 26px var(--touch-secondary-glow);
}

.evolveReady {
  background: radial-gradient(
      circle at 35% 32%,
      var(--touch-secondary-glow),
      var(--touch-secondary-intense) 55%,
      var(--touch-surface-shadow)
    ),
    linear-gradient(170deg, rgba(8, 18, 36, 0.95), rgba(12, 32, 54, 0.76));
  box-shadow: 0 14px 32px rgba(4, 10, 24, 0.6), 0 0 32px var(--touch-secondary-glow);
  /* BUG-008: Prevent reflow during pulse animation */
  transform: scale(1);
  will-change: transform;
  backface-visibility: hidden;
  -webkit-backface-visibility: hidden;
  /* Force GPU compositing */
  transform: translateZ(0) scale(1);
  -webkit-transform: translateZ(0) scale(1);
}

.evolveLocked {
  background: radial-gradient(
      circle at 40% 34%,
      var(--touch-neutral-soft),
      rgba(15, 23, 42, 0.88)
    ),
    linear-gradient(170deg, rgba(8, 18, 36, 0.92), rgba(12, 32, 54, 0.72));
  border-color: var(--touch-neutral-border);
  box-shadow: var(--touch-shadow-soft);
}

.cooldownState {
  filter: var(--touch-cooldown-filter);
  box-shadow: inset 0 0 0 1px var(--touch-neutral-glow), 0 10px 20px rgba(4, 10, 24, 0.45);
  cursor: progress;
}

/* Small screens - stack buttons vertically */
@media (max-width: 400px) {
  .touchLayer {
    --touch-spacing: calc(var(--touch-scale) * 8px);
    --touch-gap: calc(var(--touch-scale) * var(--touch-vertical-scale) * 52px);
    --touch-horizontal-offset: 0px;
    --touch-dash-bottom: clamp(
      calc(var(--touch-bottom-base) + var(--touch-gap) * 1.0),
      calc(var(--touch-bottom-base) + var(--touch-gap) * 1.4),
      calc(var(--touch-bottom-base) + var(--touch-gap) * 1.8)
    );
    --touch-skill-bottom: clamp(
      calc(var(--touch-bottom-base) + var(--touch-gap) * 2.0),
      calc(var(--touch-bottom-base) + var(--touch-gap) * 2.5),
      calc(var(--touch-bottom-base) + var(--touch-gap) * 3.0)
    );
    --touch-cycle-bottom: clamp(
      calc(var(--touch-bottom-base) + var(--touch-gap) * 3.0),
      calc(var(--touch-bottom-base) + var(--touch-gap) * 3.6),
      calc(var(--touch-bottom-base) + var(--touch-gap) * 4.2)
    );
    --touch-evolve-bottom: clamp(
      calc(var(--touch-bottom-base) + var(--touch-gap) * 1.5),
      calc(var(--touch-bottom-base) + var(--touch-gap) * 2.0),
      calc(var(--touch-bottom-base) + var(--touch-gap) * 2.5)
    );
  }

  /* Stack all buttons in single column */
  .layoutRight .skillButton,
  .layoutRight .cycleSkillButton,
  .layoutRight .evolveButton {
    right: calc(var(--safe-area-inset-right, 0px) + var(--touch-spacing));
    left: auto;
  }

  .layoutLeft .skillButton,
  .layoutLeft .cycleSkillButton,
  .layoutLeft .evolveButton {
    left: calc(var(--safe-area-inset-left, 0px) + var(--touch-spacing));
    right: auto;
  }

  /* Reduce button sizes slightly */
  .attackButton {
    width: calc(var(--touch-scale) * 65px);
    height: calc(var(--touch-scale) * 65px);
  }

  .dashButton,
  .skillButton,
  .evolveButton {
    width: calc(var(--touch-scale) * 58px);
    height: calc(var(--touch-scale) * 58px);
  }

  .cycleSkillButton {
    width: calc(var(--touch-scale) * 52px);
    height: calc(var(--touch-scale) * 52px);
  }

  .joystickZone {
    width: calc(var(--touch-scale) * 100px);
    height: calc(var(--touch-scale) * 100px);
  }

  .joystickKnob {
    width: calc(var(--touch-scale) * 40px);
    height: calc(var(--touch-scale) * 40px);
  }
}

/* Extra small screens - even tighter spacing */
@media (max-width: 350px) {
  .touchLayer {
    --touch-spacing: calc(var(--touch-scale) * 6px);
    --touch-gap: calc(var(--touch-scale) * var(--touch-vertical-scale) * 44px);
  }

  .attackButton {
    width: calc(var(--touch-scale) * 60px);
    height: calc(var(--touch-scale) * 60px);
  }

  .dashButton,
  .skillButton,
  .evolveButton {
    width: calc(var(--touch-scale) * 54px);
    height: calc(var(--touch-scale) * 54px);
  }

  .cycleSkillButton {
    width: calc(var(--touch-scale) * 48px);
    height: calc(var(--touch-scale) * 48px);
  }

  .joystickZone {
    width: calc(var(--touch-scale) * 85px);
    height: calc(var(--touch-scale) * 85px);
  }

  .joystickKnob {
    width: calc(var(--touch-scale) * 34px);
    height: calc(var(--touch-scale) * 34px);
  }

  .buttonLabel {
    font-size: clamp(0.55rem, 1.6vw, 0.7rem);
  }

  .buttonLegend {
    font-size: clamp(0.5rem, 1.4vw, 0.65rem);
  }
}

/* Ultra small screens (< 320px) - critical space optimization */
@media (max-width: 320px) {
  .touchLayer {
    --touch-spacing: calc(var(--touch-scale) * 5px);
    --touch-gap: calc(var(--touch-scale) * var(--touch-vertical-scale) * 40px);
  }

  .attackButton {
    width: calc(var(--touch-scale) * 56px);
    height: calc(var(--touch-scale) * 56px);
  }

  .dashButton,
  .skillButton,
  .evolveButton {
    width: calc(var(--touch-scale) * 50px);
    height: calc(var(--touch-scale) * 50px);
  }

  .cycleSkillButton {
    width: calc(var(--touch-scale) * 44px);
    height: calc(var(--touch-scale) * 44px);
  }

  .joystickZone {
    width: calc(var(--touch-scale) * 80px);
    height: calc(var(--touch-scale) * 80px);
  }

  .joystickKnob {
    width: calc(var(--touch-scale) * 32px);
    height: calc(var(--touch-scale) * 32px);
  }

  .buttonIcon {
    font-size: 0.9em;
  }

  .buttonLabel {
    font-size: clamp(0.5rem, 1.5vw, 0.65rem);
  }

  .buttonLegend {
    font-size: clamp(0.45rem, 1.3vw, 0.6rem);
  }
}

/* Intermediate breakpoint: 400-600px width */
@media (min-width: 401px) and (max-width: 600px) {
  .touchLayer {
    --touch-gap: calc(var(--touch-scale) * var(--touch-vertical-scale) * 70px);
    --touch-spacing: calc(var(--touch-scale) * 12px);
    --touch-horizontal-offset: calc(var(--touch-scale) * 85px);
  }
}

/* Landscape: medium height (normal landscape) */
@media (min-height: 501px) and (max-height: 667px) and (orientation: landscape) {
  .touchLayer {
    --touch-spacing: calc(var(--touch-scale) * 10px);
    --touch-gap: min(60px, 9vh);
    --touch-horizontal-offset: calc(var(--touch-scale) * 75px);
  }

  /* Ajuste fino para evitar sobreposição */
  .attackButton,
  .dashButton,
  .joystickZone {
    transform: scale(0.95);
  }

  .buttonLabel {
    font-size: clamp(0.52rem, 1.6vw, 0.68rem);
  }

  .buttonLegend {
    font-size: clamp(0.5rem, 1.4vw, 0.63rem);
  }
}

/* Landscape squeeze: small viewport height */
@media (max-height: 500px) and (orientation: landscape) {
  .touchLayer {
    --touch-spacing: 8px;
    --touch-gap: min(40px, 8vh);
    --touch-horizontal-offset: calc(var(--touch-scale) * 58px);
    --touch-attack-bottom: calc(var(--safe-area-inset-bottom, 0px) + 8px);
    --touch-dash-bottom: calc(var(--safe-area-inset-bottom, 0px) + 8px + var(--touch-gap) * 0.6);
    --touch-skill-bottom: calc(var(--safe-area-inset-bottom, 0px) + 8px + var(--touch-gap) * 1.2);
    --touch-cycle-bottom: calc(var(--safe-area-inset-bottom, 0px) + 8px + var(--touch-gap) * 1.8);
    --touch-evolve-bottom: calc(var(--safe-area-inset-bottom, 0px) + 8px + var(--touch-gap) * 0.8);
  }

  .attackButton,
  .dashButton,
  .joystickZone {
    transform: scale(0.85);
  }

  .skillButton,
  .cycleSkillButton,
  .evolveButton {
    transform: scale(0.75);
  }

  /* Reduzir tamanhos de fonte em landscape */
  .buttonLabel {
    font-size: clamp(0.5rem, 1.5vw, 0.65rem);
  }

  .buttonLegend {
    font-size: clamp(0.48rem, 1.3vw, 0.6rem);
  }

  .cooldownLabel,
  .skillLabel {
    font-size: calc(var(--touch-scale) * 0.55rem);
  }
}

/* BUG-005: Hide legends on very small heights to prevent clipping */
@media (max-height: 600px) {
  .buttonLegend {
    display: none;
  }

  .touchLayer {
    --touch-legend-space: 0px;
  }
}

/* Medium-small height in landscape (300-400px) */
@media (min-height: 301px) and (max-height: 400px) and (orientation: landscape) {
  .touchLayer {
    --touch-gap: min(36px, 7vh);
    --touch-spacing: 7px;
    --touch-horizontal-offset: calc(var(--touch-scale) * 54px);
    --touch-attack-bottom: calc(var(--safe-area-inset-bottom, 0px) + 7px);
    --touch-dash-bottom: calc(var(--safe-area-inset-bottom, 0px) + 7px + var(--touch-gap) * 0.58);
    --touch-skill-bottom: calc(var(--safe-area-inset-bottom, 0px) + 7px + var(--touch-gap) * 1.15);
    --touch-cycle-bottom: calc(var(--safe-area-inset-bottom, 0px) + 7px + var(--touch-gap) * 1.72);
    --touch-evolve-bottom: calc(var(--safe-area-inset-bottom, 0px) + 7px + var(--touch-gap) * 0.78);
  }

  .attackButton,
  .dashButton,
  .joystickZone {
    transform: scale(0.75);
  }

  .skillButton,
  .cycleSkillButton,
  .evolveButton {
    transform: scale(0.65);
  }

  .buttonLabel {
    font-size: clamp(0.48rem, 1.4vw, 0.62rem);
  }

  .buttonLegend {
    font-size: clamp(0.45rem, 1.2vw, 0.58rem);
  }

  .cooldownLabel,
  .skillLabel {
    font-size: calc(var(--touch-scale) * 0.52rem);
  }
}

/* Extra small height in landscape (<= 300px) */
@media (max-height: 300px) and (orientation: landscape) {
  .touchLayer {
    --touch-gap: min(28px, 5vh);
    --touch-spacing: 5px;
    --touch-horizontal-offset: calc(var(--touch-scale) * 45px);
    --touch-attack-bottom: calc(var(--safe-area-inset-bottom, 0px) + 5px);
    --touch-dash-bottom: calc(var(--safe-area-inset-bottom, 0px) + 5px + var(--touch-gap) * 0.5);
    --touch-skill-bottom: calc(var(--safe-area-inset-bottom, 0px) + 5px + var(--touch-gap) * 1.0);
    --touch-cycle-bottom: calc(var(--safe-area-inset-bottom, 0px) + 5px + var(--touch-gap) * 1.5);
    --touch-evolve-bottom: calc(var(--safe-area-inset-bottom, 0px) + 5px + var(--touch-gap) * 0.7);
  }

  .attackButton,
  .dashButton,
  .joystickZone {
    transform: scale(0.65);
  }

  .skillButton,
  .cycleSkillButton,
  .evolveButton {
    transform: scale(0.55);
  }

  /* Fontes muito pequenas para altura crítica */
  .buttonLabel {
    font-size: clamp(0.42rem, 1.2vw, 0.55rem);
  }

  .buttonLegend {
    font-size: clamp(0.4rem, 1vw, 0.5rem);
  }

  .cooldownLabel,
  .skillLabel {
    font-size: calc(var(--touch-scale) * 0.48rem);
  }

  .buttonIcon {
    font-size: 0.85em;
  }
}

/* Ultra-wide screens (aspect ratio > 2:1) */
@media (min-aspect-ratio: 2/1) and (orientation: landscape) {
  .touchLayer {
    --touch-horizontal-offset: calc(var(--touch-scale) * 120px);
    --touch-spacing: calc(var(--touch-scale) * 16px);
  }

  /* Mais espaço horizontal, aproveitar para espaçar melhor */
  .layoutRight .skillButton,
  .layoutRight .cycleSkillButton,
  .layoutRight .evolveButton {
    right: calc(
      var(--safe-area-inset-right, 0px) + var(--touch-spacing) + var(--touch-horizontal-offset) + 20px
    );
  }

  .layoutLeft .skillButton,
  .layoutLeft .cycleSkillButton,
  .layoutLeft .evolveButton {
    left: calc(
      var(--safe-area-inset-left, 0px) + var(--touch-spacing) + var(--touch-horizontal-offset) + 20px
    );
  }
}

/* Telas muito altas em portrait (aspect ratio < 0.5:1) */
@media (max-aspect-ratio: 1/2) and (orientation: portrait) {
  .touchLayer {
    --touch-gap: calc(var(--touch-scale) * var(--touch-vertical-scale) * 90px);
  }

  /* Mais espaço vertical, aumentar gaps para melhor ergonomia */
  .compact {
    --touch-gap: calc(var(--touch-scale) * var(--touch-vertical-scale) * 65px);
  }
}

@media (prefers-reduced-motion: no-preference) {
  .evolveReady {
    animation: pulse 1s infinite;
  }
}

@media (prefers-reduced-motion: reduce) {
  .evolveReady {
    transform: scale(1.05);
  }

  /* Disable flash animations for reduced motion */
  .skillReady.skillJustReady,
  .chargeReady.chargeJustReady {
    animation: none;
  }

  /* Disable ripple for reduced motion */
  .button.rippleActive::after {
    animation: none;
    opacity: 0;
  }
}

/* BUG-008: Optimized pulse animation - prevent reflow */
@keyframes pulse {
  0%,
  100% {
    transform: translateZ(0) scale(1);
  }
  50% {
    transform: translateZ(0) scale(1.1);
  }
}
